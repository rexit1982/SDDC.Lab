##
##    Project: SDDC.Lab
##    Authors: Luis Chanu & Rutger Blom
##   Filename: playbooks/License_Tanzu.yml
##
---
- name: License_Tanzu.yml
  hosts: localhost
  vars:
    - LOCAL_LicenseFile: ../licenses.yml
  tasks:
    - name: License_Tanzu_Playbook
      ansible.builtin.debug:
        msg: "Starting playbook: {{ ansible_play_name }}"

    - name: Display error message if Pod-XXX-Config file is not valid or provided
      ansible.builtin.pause:
        seconds: 5
        prompt: |
          *****************************************************************************************************
          ****************************************** ERROR MESSAGE ********************************************
          *****************************************************************************************************

            A valid "Pod-XXX-Config.yml" file is required in order for this playbook to run.

            Please verify:
            ==============
              1) You supplied a valid Pod-XXX-Config.yml file via the ansible-playbook -e "@Pod-XXX-Config.yml"
                 command-line option.  Here is an example of a how to load a Pod-XXX-Config.yml file that is
                 located in your home directory:
                                    ansible-playbook -e "@~/Pod-XXX-Config.yml" Deploy.yml

              2) The Pod-XXX-Config.yml file provided was created using the playbooks/CreatePodConfig.yml script.
                 All Pod configuration files used to deploy labs MUST be generated using that script.

              3) You included the proper path with the "-e" option to the Pod-XXX-Config.yml file.

              4) You prefaced the file name in the "-e" option with a '@', as shown in the example above.

          *****************************************************************************************************
      when:
        - Valid_Pod_Config_File is not defined

    - name: Exit Ansible playbook if Pod-XXX-Config.yml file is not valid or provided
      ansible.builtin.meta: end_play
      when: Valid_Pod_Config_File is not defined

    - name: DEBUG -- Display Target Variables (Pause)
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d' | format(Pod.Number | int) }} ==================================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}

                                         License File: {{ LOCAL_LicenseFile }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables

##
## Check if any Tanzu Supervisor Clusters will deployed
##
    - name: Store the nested cluster data structure
      ansible.builtin.set_fact:
        tanzu_supervisor: "{{ Nested_Cluster }}"
      loop: "{{ Nested_Cluster | dict2items }}"
      when:
        - item.value.Tanzu.SupervisorCluster.Enable
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy


###
### GOAL: If License file does not exist, then skip all licensing, and leave the components in Evauation state.
###

    - name: Check for existance of license file
      ansible.builtin.stat:
        path: "{{ LOCAL_LicenseFile }}"
        get_checksum: false
      register: stat_results
      when:
        - tanzu_supervisor is defined
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy

    - name: Assume file does not exist, so set flag to skip licensing products
      ansible.builtin.set_fact:
        licenseproducts: false
      when:
        - tanzu_supervisor is defined
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy

    - name: If License file does exist and is a regular file, then set flag to license products
      ansible.builtin.set_fact:
        licenseproducts: true
      when:
        - tanzu_supervisor is defined
        - stat_results.stat.exists
        - stat_results.stat.isreg
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy

    - name: If not licensing products, notify user
      ansible.builtin.pause:
        seconds: 20
        prompt: |
          =========================================================================
          =========================== Licensing Notice  ===========================
          =========================================================================

             The following licensing file does not appear to exist:
                                 {{ LOCAL_LicenseFile }}

             For that reason, the following products will NOT be licensed, and
             will operate with their respective evaluation license(s):

                                 vSphere with Tanzu

          =========================================================================
      when:
        - tanzu_supervisor is defined
        - not licenseproducts
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy

    - name: If we are licensing products, read in license information
      ansible.builtin.include_vars:
        file: "{{ LOCAL_LicenseFile }}"
      no_log: true
      when:
        - tanzu_supervisor is defined
        - licenseproducts
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy


##
## License Tanzu
##
## TBD - This task only adds the Tanzu license to vCenter. It does not assign the license to the Supervisor Cluster "asset". Needs further investugation
    - name: Add Tanzu license to vCenter
      community.vmware.vcenter_license:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        license: "{{ item.KeyCode }}"
        state: present
      loop: "{{ License.VMware.Tanzu.Licenses | default([]) }}"
      ignore_errors: true                                       # If license in already in use or not applicable, it will result in 'failure', so need to ensure we continue by ignoring the error
      no_log: true
      when:
        - tanzu_supervisor is defined
        - Deploy.Product.NSXT.LocalManager.Deploy
        - Deploy.Product.NSXT.Edge.Deploy
